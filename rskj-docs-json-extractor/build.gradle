/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Rskj Docs Json Extractor',
                   'Main-Class': 'org.rsk.doc.extractor.StartExtractor'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'org/rsk/doc/extractor/dto/**')
        }))
    }

    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

test {
    useJUnit()
    maxHeapSize = '1G'

    finalizedBy jacocoTestReport
}

ext {
    junitVersion = '4.12'
    mockitoVersion = '2.23.4'
}

dependencies {
    compile 'com.github.javaparser:javaparser-symbol-solver-core:3.20.2'
    compile 'org.json:json:20210307'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'org.apache.commons:commons-lang3:3.11'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation 'commons-io:commons-io:2.5'
    testImplementation 'com.jayway.jsonpath:json-path:2.5.0'


}

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
