{
  "title" : "Title",
  "description" : "Description",
  "methodDetails" : [ {
    "method" : "validateResponseDescriptionFromYaml",
    "description" : "",
    "summary" : "",
    "methodType" : "READ",
    "requestDetails" : {
      "inputParams" : [ ],
      "requestExamples" : [ "{ \"params\": [{\n  \"from\": \"0xb60e8dd61c5d32be8058bb8eb970870f07233155\",\n  \"to\": \"0xd46e8dd67c5d32be8058bb8eb970870f07244567\",\n  \"gas\": \"0x76c0\",\n  \"gasPrice\": \"0x9184e72a000\",\n  \"value\": \"0x9184e72a\",\n  \"data\": \"0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675\"\n}] }\n" ]
    },
    "responseDetails" : [ {
      "code" : "Success",
      "success" : true,
      "httpCode" : 200,
      "description" : "**Object** - The transaction object\n  - **from**: DATA, 20 Bytes - The address the transaction is send from.\n  - **to**: DATA, 20 Bytes - (optional when creating new contract) The address the transaction is directed to.\n  - **gas**: QUANTITY - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas.\n  - **gasPrice**: QUANTITY - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas\n  - **value**: QUANTITY - (optional) Integer of the value sent with this transaction\n  - **data**: DATA - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For details see Ethereum Contract ABI\n  - **nonce**: QUANTITY - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.\n",
      "responseExample" : "{\n  \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\"\n}\n",
      "modelKey" : null
    } ]
  } ],
  "models" : { }
}